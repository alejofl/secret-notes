pipeline {
    agent any

    environment {
        IMAGE_NAME = "alejofl/secret-notes"
    }

    tools {
        nodejs "node-22"
    }

    stages {
        stage('Preparation') {
            steps {
                checkout scm
                script {
                    app_version = sh(
                        script: "grep '\"version\"' package.json | sed 's/.*\"version\": \"\\(.*\\)\".*/\\1/'",
                        returnStdout: true
                    ).trim()
                }
                echo "App Version: ${app_version}"
            }
        }

        stage('Linting') {
            parallel {
                stage('Static Code Analysis (SonarQube)') {
                    steps {
                        script {
                            def scannerHome = tool 'SonarScanner';
                            withSonarQubeEnv('SonarScanner') {
                                sh "${scannerHome}/bin/sonar-scanner"
                            }
                        }
                    }
                }
                stage('Security Scan (Snyk)') {
                    steps {
                        snykSecurity(
                            snykInstallation: 'SnykScanner',
                            snykTokenId: 'snyk-token',
                        )
                    }
                }
            }
        }

        stage('Unit Testing') {
            parallel {
                stage('Backend Unit Testing') {
                    steps {
                       sh 'cd backend && npm install && npm run test && cd ..'
                    }
                }
                stage('Frontend Unit Testing') {
                    steps {
                       sh 'cd frontend && npm install && npm run test && cd ..'
                    }
                }
            }
        }
    }
}